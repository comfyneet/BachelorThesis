@using System.Text
@using RiceDoctor.FuzzyManager
@using RiceDoctor.OntologyManager
@using RiceDoctor.RuleManager
@using RiceDoctor.Shared
@model RiceDoctor.WebApp.Models.Advisory
@{
    var problems = (IReadOnlyList<Problem>) ViewData["Problems"];
    var classes = (IReadOnlyList<Class>) ViewData["Classes"];
    var individuals = (IReadOnlyCollection<Individual>) ViewData["Individuals"];
    var fuzzyVariables = (IReadOnlyList<VariableSymbol>) ViewData["FuzzyVariables"];
    ViewData["Title"] = "Tư vấn / Chuẩn đoán";
    ViewData["AdvisoryPage"] = true;
}

@section Styles {
    <style>
        #inputForm .select2-selection__rendered { min-height: 100px; }
    </style>
}

<script>
    var suggestIndividualExamples = [];
    var suggestIndividuals = [];
    var suggestFuzzyFacts = [];

    var generalIndividualExamples = [];
    var generalIndividuals = [];
</script>

@foreach (var individual in individuals)
{
    <script>
        generalIndividuals.push({ id: '@individual.Id', text: '@Html.Raw(individual)' });
    </script>
}

@{ var tmpGeneralIndividuals = individuals.ToList(); }
@for (var i = 0; i < 4; ++i)
{
    if (tmpGeneralIndividuals.Count == 0)
    {
        break;
    }

    var randomIndividual = tmpGeneralIndividuals.RandomElement();
    tmpGeneralIndividuals.Remove(randomIndividual);

    <script>
        generalIndividualExamples[@i] = "@Html.Raw(randomIndividual)";
    </script>
}


<div class="page-header">
    <h1>@ViewData["Title"]</h1>
</div>

<div class="row">
    <div class="col-md-12">
        <form asp-controller="Advisory" asp-action="SelectProblem" method="post">
            <input type="hidden" name="guid" value="@Model.Guid"/>
            <div class="form-group">
                <label class="col-md-3 control-label">
                    Chọn loại câu hỏi cần tư vấn,<br/>
                    sau đây là một số câu hỏi thường gặp
                </label>
                <div class="col-md-9">
                    @if (problems != null)
                    {
                        for (var i = 0; i < problems.Count; ++i)
                        {
                            <script>
                                suggestFuzzyFacts[@i] = @problems[i].SuggestFuzzyTypes.ToString().ToLower();
                            </script>

                            <div class="radio">
                                <label>
                                    <input type="radio" name="problemId" value="@i" onclick="handleProblem()">@problems[i].Type
                                </label>
                            </div>

                            var suggestTypes = new List<Class>();
                            foreach (var suggestType in problems[i].SuggestTypes)
                            {
                                if (!suggestTypes.Contains(suggestType))
                                {
                                    suggestTypes.Add(suggestType);
                                }
                                if (suggestType.GetAllSubClasses() != null)
                                {
                                    foreach (var domain in suggestType.GetAllSubClasses())
                                    {
                                        if (!suggestTypes.Contains(domain))
                                        {
                                            suggestTypes.Add(domain);
                                        }
                                    }
                                }
                            }
                            var suggestTypesSb = new StringBuilder();
                            <p id="problemDescription@(i)" style="display: none">
                                <span style="text-decoration: underline;">Gợi ý loại sự kiện cần nhập</span>:

                                @for (var j = 0; j < suggestTypes.Count; ++j)
                                {
                                    if (suggestTypes.Count > 1 && j == suggestTypes.Count - 1)
                                    {
                                        suggestTypesSb.Append(" và");
                                    }
                                    else if (j > 0)
                                    {
                                        suggestTypesSb.Append(',');
                                    }
                                    suggestTypesSb.Append($" <a href=\"{Url.Action("Class", "Ontology", new {className = suggestTypes[j].Id})}\">{suggestTypes[j]}</a>");
                                }
                                @Html.Raw(suggestTypesSb).
                            </p>

                            var suggestIndividuals = new List<Individual>();
                            foreach (var suggestType in suggestTypes)
                            {
                                var tmpIndividuals = suggestType.GetAllIndividuals();
                                if (tmpIndividuals != null)
                                {
                                    foreach (var individual in tmpIndividuals)
                                    {
                                        if (!suggestIndividuals.Contains(individual))
                                        {
                                            suggestIndividuals.Add(individual);
                                        }
                                    }
                                }
                            }

                            <script>
                                suggestIndividuals[@i] = [];
                                suggestIndividualExamples[@i] = [];

                            </script>

                            for (var j = 0; j < suggestIndividuals.Count; ++j)
                            {
                                <script>
                                    suggestIndividuals[@i][@j] = {
                                        id: "@suggestIndividuals[j].Id",
                                        text: "@Html.Raw(suggestIndividuals[j])"
                                    };
                                </script>
                            }

                            for (var j = 0; j < 4; ++j)
                            {
                                if (suggestIndividuals.Count == 0)
                                {
                                    break;
                                }

                                var randomIndividual = suggestIndividuals.RandomElement();
                                suggestIndividuals.Remove(randomIndividual);

                                <script>
                                    suggestIndividualExamples[@i][@j] = "@Html.Raw(randomIndividual)";
                                </script>
                            }
                        }
                    }
                    <div class="radio">
                        <label>
                            <input type="radio" name="problemId" value="-1" onclick="handleProblem()">Nếu không tìm được câu hỏi phù hợp, chọn tư vấn dạng tổng quát
                        </label>
                    </div>
                </div>
            </div>
            <div id="generalProblemForm" class="form-group row" style="display: none">
                <div class="col-md-12">
                    <label class="col-md-3 control-label" style="margin-bottom: 0">Nhập loại kết quả cần tìm</label>
                    <div class="col-md-9">
                        <select name="outputs" id="outputs" class="form-control" style="width: 100%" multiple>
                            @foreach (var cls in classes)
                            {
                                <option value="@cls.Id">@cls</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div id="inputForm" class="form-group">
                <label class="col-md-3 control-label">Nhập các sự kiện đã biết về cây lúa</label>
                <div class="col-md-9">
                    <select name="inputs" id="inputs" class="form-control" style="width: 100%" multiple>
                    </select>
                </div>
            </div>
            <div id="fuzzyForm" class="form-group" style="display: none">
                <label class="col-md-3 control-label" style="margin-top: 15px !important">Nhập các giá trị môi trường (nếu có)</label>
                <div class="col-md-9">
                    <div class="row">
                        <div class="col-md-12" style="margin-top: 15px !important">
                            @for (var i = 0; i < fuzzyVariables.Count; ++i)
                            {
                                var cls = classes.FirstOrDefault(c => c.Id == fuzzyVariables[i].Id);
                                var variableName = cls == null ? fuzzyVariables[i].Id : cls.ToString();

                                <div class="row">
                                    <input type="hidden" name="fuzzyInputs[@i]" value="@fuzzyVariables[i].Id"/>
                                    <div class="col-md-2" style="text-align: right;">
                                        <label class="control-label" style="margin-top: 5px">@variableName</label>
                                    </div>
                                    <div class="col-md-3">
                                        <input type="number" class="form-control" name="fuzzyValues[@i]" placeholder="(@fuzzyVariables[i].UnitOfMeasure)">
                                    </div>
                                    <div class="col-md-7"></div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-3 col-md-9" style="margin-top: 15px !important">
                    <input type="submit" class="btn btn-primary" value="Xử lý"/>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function handleProblem() {
            @if (problems != null)
            {
                <text>
                    for (var i = 0; i < @problems.Count; ++i) {
                        var pd = "#problemDescription" + i.toString();
                        if ($("input[name='problemId']:checked").val() === i.toString()) {
                            var placeholder = "";
                            if (suggestIndividualExamples[i].length > 0) {
                                placeholder += "Ví dụ: ";
                                for (var j = 0; j < suggestIndividualExamples[i].length; ++j) {
                                    if (j > 0) placeholder += ", ";
                                    placeholder += suggestIndividualExamples[i][j];
                                }
                                placeholder += ",...";
                            }

                            $("#inputs").empty();
                            $("#inputs").select2({
                                theme: "bootstrap",
                                placeholder: placeholder,
                                data: suggestIndividuals[i]
                            });

                            if ($(pd).css('display') === 'none') $(pd).fadeIn();

                            if (suggestFuzzyFacts[i] && $("#fuzzyForm").css('display') === 'none') {
                                $("#fuzzyForm").fadeIn();
                            } else if ($("#fuzzyForm").css('display') !== 'none') {
                                $("#fuzzyForm").hide();
                            }
                        } else if ($(pd).css('display') !== 'none') {
                            $(pd).hide();
                        }
                    }
                </text>
            }

            if ($("input[name='problemId']:checked").val() === "-1") {

                var placeholder = "Nhập sự kiện bất kỳ.";
                if (generalIndividualExamples.length > 0) {
                    placeholder += " Ví dụ: ";
                    for (var i = 0; i < generalIndividualExamples.length; ++i) {
                        if (i > 0) placeholder += ", ";
                        placeholder += generalIndividualExamples[i];
                    }
                    placeholder += ",...";
                }

                $("#inputs").empty();
                $("#inputs").select2({
                    theme: "bootstrap",
                    placeholder: placeholder,
                    data: generalIndividuals
                });

                if ($("#generalProblemForm").css('display') === 'none') {
                    $("#generalProblemForm").fadeIn();
                    $("#outputs").select2({ placeholder: "Ví dụ: Bệnh, Thuốc, Tác nhân gây bệnh,..." });
                }

                if ($("#fuzzyForm").css('display') === 'none') $("#fuzzyForm").fadeIn();
            } else if ($("#generalProblemForm").css('display') !== 'none') {
                $("#generalProblemForm").hide();
            }
        }

        $("#outputs").select2({
            theme: "bootstrap"
        });

        $("#inputs").select2({
            theme: "bootstrap"
        });
    </script>
}
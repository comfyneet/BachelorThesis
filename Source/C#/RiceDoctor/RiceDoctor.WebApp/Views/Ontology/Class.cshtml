@using System.Text
@using RiceDoctor.DatabaseManager
@model RiceDoctor.OntologyManager.Class
@{
    var articles = (List<KeyValuePair<Article, double>>) ViewData["Articles"];
    var relatableTerms = (IReadOnlyCollection<string>) ViewData["RelatableTerms"];
    var classTree = (string) ViewData["ClassTree"];
    var individualTree = (string) ViewData["IndividualTree"];
    var showAdvance = (bool) ViewData["ShowAdvance"];

    ViewData["Title"] = "Lớp " + Model;
    ViewData["OntologyPage"] = true;
}

<div class="row">
<div class="col-md-3">
    <div id="classTree"></div>
</div>
<div class="col-md-9" typeof="rdfs:Class" resource="@($"{Context.Request.GetBaseUrl()}Ontology/Class?className={Model.Id}")">
<ul class="nav nav-tabs">
    <li role="presentation"
        @if (!showAdvance)
        {
            @: class="active"
        }>
        <a asp-controller="Ontology" asp-action="Class" asp-route-className="@Model.Id">Thông tin cho người dùng</a>
    </li>
    <li role="presentation"
        @if (showAdvance)
        {
            @: class="active"
        }>
        <a asp-controller="Ontology" asp-action="Class" asp-route-className="@Model.Id" asp-route-showAdvance="True">Thông tin cho chuyên gia</a>
    </li>
</ul>

<h2>
    <span class="glyphicon glyphicon-copyright-mark"></span>
    <span property="rdfs:label">@ViewData["Title"]</span>
</h2>

@if (showAdvance)
{
    <section>
        <h4>Lớp cha của @Model</h4>
        @{
            var directSuperClasses = Model.GetDirectSuperClasses();
            var allSuperClasses = Model.GetAllSuperClasses();
        }
        @if (allSuperClasses == null)
        {
            <p>Không tìm thấy</p>
        }
        else
        {
            if (directSuperClasses != null)
            {
                allSuperClasses = allSuperClasses.Where(c => !directSuperClasses.Contains(c)).ToList();

                foreach (var directSuperClass in directSuperClasses)
                {
                    <p>
                        <a asp-controller="Ontology" asp-action="Class" asp-route-className="@directSuperClass.Id" asp-route-showAdvance="True">
                            <span class="glyphicon glyphicon-copyright-mark"></span>
                            <strong>@directSuperClass</strong>
                        </a>
                    </p>
                }
            }
            foreach (var allSuperClass in allSuperClasses)
            {
                <p>
                    <a asp-controller="Ontology" asp-action="Class" asp-route-className="@allSuperClass.Id" asp-route-showAdvance="True">
                        <span class="glyphicon glyphicon-copyright-mark"></span>
                        @allSuperClass
                    </a>
                </p>
            }
        }
    </section>

    <hr/>

    <section>
        <h4>Lớp con của @Model</h4>
        @{
            var directSubClasses = Model.GetDirectSubClasses();
            var allSubClasses = Model.GetAllSubClasses();
        }
        @if (allSubClasses == null)
        {
            <p>Không tìm thấy</p>
        }
        else
        {
            if (directSubClasses != null)
            {
                allSubClasses = allSubClasses.Where(c => !directSubClasses.Contains(c)).ToList();

                foreach (var directSubClass in directSubClasses)
                {
                    <p>
                        <a asp-controller="Ontology" asp-action="Class" asp-route-className="@directSubClass.Id" asp-route-showAdvance="True">
                            <span class="glyphicon glyphicon-copyright-mark"></span>
                            <strong>@directSubClass</strong>
                        </a>
                    </p>
                }
            }
            foreach (var allSubClass in allSubClasses)
            {
                <p>
                    <a asp-controller="Ontology" asp-action="Class" asp-route-className="@allSubClass.Id" asp-route-showAdvance="True">
                        <span class="glyphicon glyphicon-copyright-mark"></span>
                        @allSubClass
                    </a>
                </p>
            }
        }
    </section>

    <hr/>

    <section>
        <h4>Thuộc tính của @Model</h4>
        @if (Model.GetAttributes() != null)
        {
            foreach (var attribute in Model.GetAttributes())
            {
                <p typeof="rdfs:Property">
                    <a asp-controller="Ontology" asp-action="Attribute" asp-route-attributeName="@attribute.Id"
                       resource="@($"{Context.Request.GetBaseUrl()}Ontology/Attribute?attributeName={attribute.Id}")">
                        <span class="glyphicon glyphicon-font"></span>
                        <span property="rdfs:label">@attribute</span>
                    </a> @attribute.Range
                </p>
            }
        }
        else
        {
            <p>Không tìm thấy</p>
        }
    </section>

    <hr/>

    <section>
        <h4>Quan hệ của @Model với @Model là domain</h4>
        @if (Model.GetDomainRelations() != null)
        {
            foreach (var domainRelation in Model.GetDomainRelations())
            {
                <p>
                    <a asp-controller="Ontology" asp-action="Relation" asp-route-relationName="@domainRelation.Id">
                        <span class="glyphicon glyphicon-registration-mark'"></span>
                        @if (domainRelation.GetDirectDomains() != null && domainRelation.GetDirectDomains().Contains(Model))
                        {
                            <strong>@domainRelation</strong>
                        }
                        else
                        {
                            @domainRelation
                        }
                    </a>
                </p>
            }
        }
        else
        {
            <p>Không tìm thấy</p>
        }
    </section>

    <hr/>

    <section>
        <h4>Quan hệ của @Model với @Model là range</h4>
        @if (Model.GetRangeRelations() != null)
        {
            foreach (var rangeRelation in Model.GetRangeRelations())
            {
                <p>
                    <a asp-controller="Ontology" asp-action="Relation" asp-route-relationName="@rangeRelation.Id">
                        <span class="glyphicon glyphicon-registration-mark'"></span>
                        @if (rangeRelation.GetDirectRanges() != null && rangeRelation.GetDirectRanges().Contains(Model))
                        {
                            <strong>@rangeRelation</strong>
                        }
                        else
                        {
                            @rangeRelation
                        }
                    </a>
                </p>
            }
        }
        else
        {
            <p>Không tìm thấy</p>
        }
    </section>

    <hr/>
}

<section>
    @{ var allIndividuals = Model.GetAllIndividuals(); }
    @if (allIndividuals == null)
    {
        <h4>Thể hiện của @Model</h4>
        <p>Không tìm thấy</p>
    }
    else
    {
        <h4>@allIndividuals.Count Thể hiện của @Model</h4>

        <div class="row">
            <div class="col-md-12">
                <div id="individualTree"></div>
            </div>
        </div>
    }
</section>

@if (relatableTerms != null)
{
    <hr/>
    <section>
        <h4>Từ vựng liên quan</h4>

        @{
            var terms = relatableTerms.ToList();
            var termSb = new StringBuilder();
        }
        <p>
            @for (var i = 0; i < terms.Count; ++i)
            {
                if (terms.Count > 1 && i == terms.Count - 1)
                {
                    termSb.Append(" và");
                }
                else if (i > 0)
                {
                    termSb.Append(',');
                }
                termSb.Append($" {terms[i]}");
            }
            @Model có các từ vựng liên quan là @termSb.
        </p>
    </section>
}


@if (articles != null)
{
    <hr/>
    <section>
        <h4>Tài liệu liên quan</h4>

        @foreach (var article in articles)
        {
            <p>
                <a href="@Html.Raw(article.Key.Url)">@article.Key.Title</a> - (@article.Key.Website.Name) @article.Key.RetrievedDate.ToString("dd/MM/yyyy")
            </p>
        }
    </section>
}

</div>
</div>

@section Scripts {
    <script>
        var classData = @Html.Raw(classTree);
        var individualData = @Html.Raw(individualTree);

        $('#classTree').treeview({
            color: '#428bca',
            showBorder: false,
            showTags: true,
            enableLinks: true,
            data: classData
        });

        $('#individualTree').treeview({
            color: '#428bca',
            showBorder: false,
            showTags: true,
            enableLinks: true,
            data: individualData
        });
    </script>
}